<?xml version="1.0"?>
<CSScriptData xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <ScriptType>CS1</ScriptType>
  <CompilerVersion>4</CompilerVersion>
  <ReferenceAssemblies>
    <string>System.dll</string>
    <string>System.Core.dll</string>
    <string>System.Data.dll</string>
    <string>System.Data.DataSetExtensions.dll</string>
    <string>System.Deployment.dll</string>
    <string>System.Drawing.dll</string>
    <string>System.Windows.Forms.dll</string>
    <string>System.Xml.dll</string>
    <string>System.Xml.Linq.dll</string>
    <string>Microsoft.CSharp.dll</string>
  </ReferenceAssemblies>
  <UsingText>using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Windows.Forms;
using System.IO;
using PEPlugin;
using PEPlugin.SDX;
using PEPlugin.Pmx;
using PEPlugin.Pmd;
using PEPlugin.Vmd;
using PEPlugin.Vme;
using PEPlugin.Form;
using PEPlugin.View;
using SlimDX;
using SlimDX.Direct3D9;
using IES = PEPlugin.Vme.IPEVmeEventState;
using IBS = PEPlugin.Vme.IPEVmeBoneState;
using ISS = PEPlugin.Vme.IPEVmeSingleValueState;
using IMS = PEPlugin.Vme.IPEVmeSingleValueState;
using ICS = PEPlugin.Vme.IPEVmeCameraState;
using ILS = PEPlugin.Vme.IPEVmeLightState;
</UsingText>
  <FullCodeText>
// AutoLuminous3用 追加UV一括設定スクリプト
// 制作：そぼろ
// 選択頂点の追加UVを一括して変更します。
// 当然ながら、PMX専用です。また、情報タブの追加UV数を3以上にしておいてください。
// 設定値の変更は直接下の数値を書き換えてください。

// Scriptプラグインクラス(クラス名変更不可)
public class CSScriptClass : PEPluginClass
{

    // エントリポイント
    public override void Run(IPERunArgs args)
    {
        try {
            //PMX取得
            IPXPmx pmx = args.Host.Connector.Pmx.GetCurrentState();
            int[] vtxs = args.Host.Connector.View.PMDView.GetSelectedVertexIndices();
            
            pmx.Header.UVACount = 3;
            
            if (vtxs.Length &gt; 0)
            {
                foreach (int ivtx in vtxs)
                {
                    //値の取得
                    PEPlugin.SDX.V4 UV1 = pmx.Vertex[ivtx].UVA1;
                    PEPlugin.SDX.V4 UV2 = pmx.Vertex[ivtx].UVA2;
                    PEPlugin.SDX.V4 UV3 = pmx.Vertex[ivtx].UVA3;
                    
                    ///////////////////////////////////////////////////////////////////////
                    // 追加UV値設定
                    // 各値を変更したり、不要なものは削除してください
                    
                    //追加UV1、システムコード
                    
                    UV1.X = 0.2f; UV1.Y = 0.7f; //AL識別コード・変更不可
                    
                    UV1.Z = 0.0f; //点滅周期
                    UV1.W = 0 + 10; //フラグ
                    
                    
                    //追加UV2、カラーコード
                    
                    UV2.R = 1.0f; //R or H
                    UV2.G = 1.0f; //G or S
                    UV2.B = 1.0f; //B or V
                    UV2.W = 1.0f; //光量
                    
                    //追加UV3、拡張コード
                    
                    UV3.X = 0.0f; //テクスチャ減色
                    UV3.Y = 0.0f; //点滅位相
                    UV3.Z = 0.0f; //ポップアップ
                    
                    
                    ///////////////////////////////////////////////////////////////////////
                    
                    //値の設定
                    pmx.Vertex[ivtx].UVA1 = UV1;
                    pmx.Vertex[ivtx].UVA2 = UV2;
                    pmx.Vertex[ivtx].UVA3 = UV3;
                    
                }
                
                
                //PMXの更新
                args.Host.Connector.Pmx.Update(pmx);
                args.Host.Connector.Form.UpdateList(UpdateObject.All);
                args.Host.Connector.View.PMDView.UpdateModel();
                args.Host.Connector.View.PMDView.UpdateView();
                
            }
        }
        catch (Exception ex) {
            MessageBox.Show(ex.Message, "エラー", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
        }
    }
    
    // コンストラクタ
    public CSScriptClass() : base()
    {
        // 起動オプション
        // boot時実行(true/false), プラグインメニューへの登録(true/false), メニュー登録名("")
        m_option = new PEPluginOption(false, true, "追加UV一括設定");
    }

}
</FullCodeText>
  <CodeText>
// Run()関数内の処理を記述
// 外部クラスの活用などは一般形式のスクリプトコードを使用してください.

// プラグイン変数は IPERunArgs args を通して取得可能
// コードに自動的に追加されるヘッダ／フッタはメニューから有効化／確認が可能(ヘッダは標準で有効設定)


</CodeText>
  <CodeHeader>//
// ---- 簡易編集用ヘッダコード ----

// 常用接続変数一括登録

// ホスト配下
IPEPluginHost host = args.Host;
IPEBuilder builder = host.Builder;
IPEShortBuilder bd = host.Builder.SC;		// 短絡系ビルダ
IPXPmxBuilder bdx = host.Builder.Pmx;		// PMXビルダ
IPEConnector connect = host.Connector;
IPEPMDViewConnector view = host.Connector.View.PMDView;

// PMX関連

IPXPmx pmx = connect.Pmx.GetCurrentState();     // PMX取得
IPXHeader header = pmx.Header;                  // header   :ヘッダ
IPXModelInfo info = pmx.ModelInfo;              // info     :モデル情報
IList&lt;IPXVertex&gt; vertex = pmx.Vertex;           // vertex   :頂点   | リスト
IList&lt;IPXMaterial&gt; material = pmx.Material;     // material :材質   | リスト
IList&lt;IPXBone&gt; bone = pmx.Bone;                 // bone     :ボーン | リスト
IList&lt;IPXMorph&gt; morph = pmx.Morph;				// morph    :モーフ | リスト
IList&lt;IPXNode&gt; node = pmx.Node;					// node     :表示枠 | リスト
IList&lt;IPXBody&gt; body = pmx.Body;                 // body     :剛体   | リスト
IList&lt;IPXJoint&gt; joint = pmx.Joint;              // joint    :Joint  | リスト


/*
// PMD関連

IPEPmd pmd = connect.Pmd.GetCurrentState();         // PMD取得
// IPEXPmd pex = connect.Pmd.GetCurrentStateEx();       // 拡張PMDを使う場合はコメント解除(拡張用データへの接続変数は未登録)

IPEHeader header = pmd.Header;                  // header   :ヘッダ
IList&lt;IPEVertex&gt; vertex = pmd.Vertex;           // vertex   :頂点   | リスト
IList&lt;int&gt; face = pmd.Face;                     // face     :面     | リスト
IList&lt;IPEMaterial&gt; material = pmd.Material;     // material :材質   | リスト
IList&lt;IPEBone&gt; bone = pmd.Bone;                 // bone     :ボーン | リスト
IList&lt;IPEIK&gt; ik = pmd.IK;                       // ik       :IK     | リスト
IList&lt;IPEExpression&gt; exp = pmd.Expression;      // exp      :表情   | リスト

IList&lt;int&gt; frameExp = pmd.FrameExpression;      // frameExp :表情枠 | リスト
IList&lt;IPEFrameBone&gt; frameBone = pmd.FrameBone;  // frameBone:ボーン表示枠 | リスト

string[] toon = pmd.ToonName;                   // toon     :Toon   | 配列

IList&lt;IPEBody&gt; body = pmd.Body;                 // body     :剛体   | リスト
IList&lt;IPEJoint&gt; joint = pmd.Joint;              // joint    :Joint  | リスト
*/

</CodeHeader>
  <CodeFooter>//
// ---- 簡易編集用フッタコード ----

// 更新処理
// デフォルト設定ではフッタコードはOFF

// PMX更新
connect.Pmx.Update(pmx);

/*
// PMD更新
connect.Pmd.Update(pmd);
//connect.Pmd.UpdateEx(pex);
*/

// Form更新
connect.Form.UpdateList(UpdateObject.All);  // 重い場合は引数を変更して個別に更新

// PMDView更新
connect.View.PMDView.UpdateModel();         // Viewの更新が不要な場合はコメントアウト
connect.View.PMDView.UpdateView();


</CodeFooter>
  <EnableHeader>true</EnableHeader>
  <EnableFooter>false</EnableFooter>
  <ActivePages>0</ActivePages>
</CSScriptData>